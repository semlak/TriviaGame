/* general styling */

body {
	font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
	font-size: 18px;
	line-height: 34px;
	color: #777;
}



.main-content, .sidebar {
	background: #fff;
	padding: 20px;
	border: 1px solid #ddd;
	border-radius: .25rem;
	margin-top: 40px;
}





/*.card-header {
	background: #fff;
}
*/


.container.wrapper {
	/* this top padding is used to offset the navbar's absolute positioning.  For smaller viewport, media query is used to remove top-padding and change navbar positioning to static */
	padding-top: 86px;
	padding-bottom: 40px;
	margin-bottom: 40px;
}



h1,
h2,
h3 {
	font-family: Georgia, Times, "Times New Roman", serif;
	font-weight: 700;
	color: #18BC9C;
}

h1 {
	padding-bottom: 20px;
	font-size: 30px;
	line-height: 49px;
}

h2,
h3 {
	font-size: 22px;
}



.img-profile {
	width: 200px;
	float: left;
	margin-right: 25px;
	margin-top: 10px;
}

p {
	text-align: justify;
}





/* Sticky footer styles
-------------------------------------------------- */
/*from http://getbootstrap.com/docs/4.0/examples/sticky-footer-navbar/*/

html {
  position: relative;
  min-height: 100%;
}
body {
  /* Margin bottom by footer height */
  margin-bottom: 105px;
}



.footer {
	/*padding: 30px 0;*/
	clear: both;
	font-size: 12px;

	color: #ccc;
	text-align: center;
	/*background: #666;*/
	background: #2C3E50;
	border-top: 8px solid #18BC9C;
	box-sizing: border-box;

	position: absolute;
	bottom: 0;
	width: 100%;


	/* Set the fixed height of the footer here */
	height: 105px;
	line-height: 92px;
}







/* start hover styling */


.img-social:hover {
	cursor: pointer;
	opacity: 0.8;
}








/* header/navbar */

.nav-link {
/*
	When navbar switches to collapsed, it's height decreased a bit due to the nav links (and their top and bottom padding) no longer being there.
	However, removing the nav-link top and bottom padding doesn't seem result in unpleasant display, and it prevents the changing navbar size when collapse, so remove nav-link top/bottom padding
*/
	padding-top: 0;
	padding-bottom: 0;
}



/* portfolio page */


.main-content .card-header {
	border-bottom: 3px solid rgba(0,0,0,0.125);
}

.sidebar .card-header {
	border-bottom: 2px solid rgba(0,0,0,0.125);
}



.work {
	margin-bottom: 20px;
}

.portfolio-grid {
	/* offset the bottom-margin that is un-needed for the bottom row of the grid */
	margin-bottom: -20px;
}


.work .card-img-overlay, .work .card-body {
	padding-left: 0;
	padding-right: 0;
	/*width: 100%;*/
}

.work h3 {
	/* these are for the styling of the bottoms over the portfolio images (they were headers in assignment one) */
	/* this looks good for the larger viewports, but gets messed up for smaller ones. Seems to be because of absolute sizes*/
	position: absolute;
	/*top: 150px;*/
	/*bottom: 20px;*/
	bottom: 10%;
	/*top: 60%;*/
	/*left: 0;*/
	width: 100%;

	padding: 15px;
	padding: 6% 2%;

	margin-bottom: 0;
	font-weight: 300;
	/*line-height: 30px;*/
	line-height: 150%;
	color: #fff;
	background-color: #18BC9C;

	text-align: center;
	border-bottom: 0;

}

.work h3:hover {
	background: #149a80;
}

/*.work .card-footer {
	background-color: #18BC9C;
	color: #fff;

}
*/



/* contact page */

	/* no custom styles needed  (relying on Bootstrap classes) */




/*media queries*/

/*  	For most of the responsiveness, I relied on bootstrap's built in styles rather than use media queries myself.
	However, do match the requirements for the AboutMe section, where the Image profile is floated with the first paragraph in some viewport sizes, but not in others,
	it seemed necessary to add some media queries.

	Also, to make the navbar transaction from absolute positioning to static, it seemed seems necessary to use a media query.
*/

@media screen and (max-width: 991px) {

	.img-profile {
		width: 100%;
		float: none;
	}
}



@media screen and (max-width: 767px) {

	.img-profile {
		float: left;
		width: 50%;
	}

	.nav-item {
		margin-left: 0!important;
	}
}



@media screen and (max-width: 575px) {

	.img-profile {
		width: 100%;
		float: none;
	}

	/*
		unstick the navbar so so that it will scroll out of screen, due to presumably small screen that would benefit from extra space
		Note that in assignent, this feature is requested beginning at 640px viewport. That is where I enabled it for the ResponsivePortfolio project.
		However, bootstrap grids do not seem to have defined col-SIZE-x elements to break at that width (https://getbootstrap.com/docs/4.0/layout/grid/#grid-options),
		so I went with the the break that occurs at 575px/576px  (col-x is for width < 576, col-sm-x is for width >= 576px)
	*/


	nav {
		position: static!important;
	}

	.container.wrapper {
		padding-top: 0;
	}

	.container.wrapper, footer .container {
		/*min-width: 560px;*/
		width: 500px;

	}

}
